[*.cs]

# CODE_SMELL


# S1147: Blocker :: Exit methods should not be called
dotnet_diagnostic.S1147.severity = warning

# S1451: Blocker :: Track lack of copyright and license headers
dotnet_diagnostic.S1451.severity = warning

# S2178: Blocker :: Short-circuit logic should be used in boolean contexts
dotnet_diagnostic.S2178.severity = warning

# S2187: Blocker :: TestCases should contain tests
dotnet_diagnostic.S2187.severity = warning

# S2368: Blocker :: Public methods should not have multidimensional array parameters
dotnet_diagnostic.S2368.severity = warning

# S2387: Blocker :: Child class fields should not shadow parent class fields
dotnet_diagnostic.S2387.severity = warning

# S2437: Blocker :: Silly bit operations should not be performed
dotnet_diagnostic.S2437.severity = warning

# S2699: Blocker :: Tests should include assertions
dotnet_diagnostic.S2699.severity = warning

# S2953: Blocker :: Methods named "Dispose" should implement "IDisposable.Dispose"
dotnet_diagnostic.S2953.severity = warning

# S3060: Blocker :: "is" should not be used with "this"
dotnet_diagnostic.S3060.severity = warning

# S3237: Blocker :: "value" parameters should be used
dotnet_diagnostic.S3237.severity = warning

# S3427: Blocker :: Method overloads with default parameter values should not overlap 
dotnet_diagnostic.S3427.severity = warning

# S3433: Blocker :: Test method signatures should be correct
dotnet_diagnostic.S3433.severity = warning

# S3443: Blocker :: Type should not be examined on "System.Type" instances
dotnet_diagnostic.S3443.severity = warning

# S3875: Blocker :: "operator==" should not be overloaded on reference types
dotnet_diagnostic.S3875.severity = warning

# S3877: Blocker :: Exceptions should not be thrown from unexpected methods
dotnet_diagnostic.S3877.severity = warning

# S4462: Blocker :: Calls to "async" methods should not be blocking
dotnet_diagnostic.S4462.severity = warning

# S1006: Critical :: Method overrides should not change parameter defaults
dotnet_diagnostic.S1006.severity = warning

# S1067: Critical :: Expressions should not be too complex
dotnet_diagnostic.S1067.severity = warning

# S1163: Critical :: Exceptions should not be thrown in finally blocks
dotnet_diagnostic.S1163.severity = warning

# S1186: Critical :: Methods should not be empty
dotnet_diagnostic.S1186.severity = warning

# S1215: Critical :: "GC.Collect" should not be called
dotnet_diagnostic.S1215.severity = warning

# S121: Critical :: Control structures should use curly braces
dotnet_diagnostic.S121.severity = warning

# S126: Critical :: "if ... else if" constructs should end with "else" clauses
dotnet_diagnostic.S126.severity = warning

# S131: Critical :: "switch/Select" statements should contain a "default/Case Else" clauses
dotnet_diagnostic.S131.severity = warning

# S134: Critical :: Control flow statements "if", "switch", "for", "foreach", "while", "do"  and "try" should not be nested too deeply
dotnet_diagnostic.S134.severity = warning

# S1541: Critical :: Methods and properties should not be too complex
dotnet_diagnostic.S1541.severity = warning

# S1699: Critical :: Constructors should only call non-overridable methods
dotnet_diagnostic.S1699.severity = warning

# S1821: Critical :: "switch" statements should not be nested
dotnet_diagnostic.S1821.severity = warning

# S1944: Critical :: Inappropriate casts should not be made
dotnet_diagnostic.S1944.severity = warning

# S1994: Critical :: "for" loop increment clauses should modify the loops' counters
dotnet_diagnostic.S1994.severity = warning

# S2197: Critical :: Modulus results should not be checked for direct equality
dotnet_diagnostic.S2197.severity = warning

# S2223: Critical :: Non-constant static fields should not be visible
dotnet_diagnostic.S2223.severity = warning

# S2290: Critical :: Field-like events should not be virtual
dotnet_diagnostic.S2290.severity = warning

# S2291: Critical :: Overflow checking should not be disabled for "Enumerable.Sum"
dotnet_diagnostic.S2291.severity = warning

# S2302: Critical :: "nameof" should be used
dotnet_diagnostic.S2302.severity = warning

# S2330: Critical :: Array covariance should not be used
dotnet_diagnostic.S2330.severity = warning

# S2339: Critical :: Public constant members should not be used
dotnet_diagnostic.S2339.severity = warning

# S2346: Critical :: Flags enumerations zero-value members should be named "None"
dotnet_diagnostic.S2346.severity = warning

# S2360: Critical :: Optional parameters should not be used
dotnet_diagnostic.S2360.severity = warning

# S2365: Critical :: Properties should not make collection or array copies
dotnet_diagnostic.S2365.severity = warning

# S2479: Critical :: Whitespace and control characters in string literals should be explicit
dotnet_diagnostic.S2479.severity = warning

# S2692: Critical :: "IndexOf" checks should not be for positive numbers
dotnet_diagnostic.S2692.severity = warning

# S2696: Critical :: Instance members should not write to "static" fields
dotnet_diagnostic.S2696.severity = warning

# S2701: Critical :: Literal boolean values should not be used in assertions
dotnet_diagnostic.S2701.severity = warning

# S3215: Critical :: "interface" instances should not be cast to concrete types
dotnet_diagnostic.S3215.severity = warning

# S3216: Critical :: "ConfigureAwait(false)" should be used
dotnet_diagnostic.S3216.severity = warning

# S3217: Critical :: "Explicit" conversions of "foreach" loops should not be used
dotnet_diagnostic.S3217.severity = warning

# S3218: Critical :: Inner class members should not shadow outer class "static" or type members
dotnet_diagnostic.S3218.severity = warning

# S3265: Critical :: Non-flags enums should not be used in bitwise operations
dotnet_diagnostic.S3265.severity = warning

# S3353: Critical :: Unchanged local variables should be "const"
dotnet_diagnostic.S3353.severity = warning

# S3447: Critical :: "[Optional]" should not be used on "ref" or "out" parameters
dotnet_diagnostic.S3447.severity = warning

# S3451: Critical :: "[DefaultValue]" should not be used when "[DefaultParameterValue]" is meant
dotnet_diagnostic.S3451.severity = warning

# S3600: Critical :: "params" should not be introduced on overrides
dotnet_diagnostic.S3600.severity = warning

# S3776: Critical :: Cognitive Complexity of methods should not be too high
dotnet_diagnostic.S3776.severity = warning

# S3871: Critical :: Exception types should be "public"
dotnet_diagnostic.S3871.severity = warning

# S3874: Critical :: "out" and "ref" parameters should not be used
dotnet_diagnostic.S3874.severity = warning

# S3904: Critical :: Assemblies should have version information
dotnet_diagnostic.S3904.severity = warning

# S3937: Critical :: Number patterns should be regular
dotnet_diagnostic.S3937.severity = warning

# S3972: Critical :: Conditionals should start on new lines
dotnet_diagnostic.S3972.severity = warning

# S3973: Critical :: A conditionally executed single line should be denoted by indentation
dotnet_diagnostic.S3973.severity = warning

# S3998: Critical :: Threads should not lock on objects with weak identity
dotnet_diagnostic.S3998.severity = warning

# S4000: Critical :: Pointers to unmanaged memory should not be visible
dotnet_diagnostic.S4000.severity = warning

# S4015: Critical :: Inherited member visibility should not be decreased
dotnet_diagnostic.S4015.severity = warning

# S4019: Critical :: Base class methods should not be hidden
dotnet_diagnostic.S4019.severity = warning

# S4025: Critical :: Child class fields should not differ from parent class fields only by capitalization
dotnet_diagnostic.S4025.severity = warning

# S4039: Critical :: Interface methods should be callable by derived types
dotnet_diagnostic.S4039.severity = warning

# S4487: Critical :: Unread "private" fields should be removed
dotnet_diagnostic.S4487.severity = warning

# S4524: Critical :: "default" clauses should be first or last
dotnet_diagnostic.S4524.severity = warning

# S4635: Critical :: String offset-based methods should be preferred for finding substrings from offsets
dotnet_diagnostic.S4635.severity = warning

# S5034: Critical :: "ValueTask" should be consumed correctly
dotnet_diagnostic.S5034.severity = warning

# S927: Critical :: Parameter names should match base declaration and other partial definitions
dotnet_diagnostic.S927.severity = warning

# S1135: Info :: Track uses of "TODO" tags
dotnet_diagnostic.S1135.severity = warning

# S1309: Info :: Track uses of in-source issue suppressions
dotnet_diagnostic.S1309.severity = warning

# S103: Major :: Lines should not be too long
dotnet_diagnostic.S103.severity = warning

# S104: Major :: Files should not have too many lines of code
dotnet_diagnostic.S104.severity = warning

# S1066: Major :: Collapsible "if" statements should be merged
dotnet_diagnostic.S1066.severity = warning

# S106: Major :: Standard outputs should not be used directly to log anything
dotnet_diagnostic.S106.severity = warning

# S107: Major :: Methods should not have too many parameters
dotnet_diagnostic.S107.severity = warning

# S108: Major :: Nested blocks of code should not be left empty
dotnet_diagnostic.S108.severity = warning

# S109: Major :: Magic numbers should not be used
dotnet_diagnostic.S109.severity = warning

# S110: Major :: Inheritance tree of classes should not be too deep
dotnet_diagnostic.S110.severity = warning

# S1110: Major :: Redundant pairs of parentheses should be removed
dotnet_diagnostic.S1110.severity = warning

# S1117: Major :: Local variables should not shadow class fields
dotnet_diagnostic.S1117.severity = warning

# S1118: Major :: Utility classes should not have public constructors
dotnet_diagnostic.S1118.severity = warning

# S1121: Major :: Assignments should not be made from within sub-expressions
dotnet_diagnostic.S1121.severity = warning

# S1123: Major :: "Obsolete" attributes should include explanations
dotnet_diagnostic.S1123.severity = warning

# S112: Major :: General exceptions should never be thrown
dotnet_diagnostic.S112.severity = warning

# S1134: Major :: Track uses of "FIXME" tags
dotnet_diagnostic.S1134.severity = warning

# S1144: Major :: Unused private types or members should be removed
dotnet_diagnostic.S1144.severity = warning

# S1151: Major :: "switch case" clauses should not have too many lines of code
dotnet_diagnostic.S1151.severity = warning

# S1168: Major :: Empty arrays and collections should be returned instead of null
dotnet_diagnostic.S1168.severity = warning

# S1172: Major :: Unused method parameters should be removed
dotnet_diagnostic.S1172.severity = warning

# S1200: Major :: Classes should not be coupled to too many other classes (Single Responsibility Principle)
dotnet_diagnostic.S1200.severity = warning

# S122: Major :: Statements should be on separate lines
dotnet_diagnostic.S122.severity = warning

# S125: Major :: Sections of code should not be commented out
dotnet_diagnostic.S125.severity = warning

# S127: Major :: "for" loop stop conditions should be invariant
dotnet_diagnostic.S127.severity = warning

# S138: Major :: Functions should not have too many lines of code
dotnet_diagnostic.S138.severity = warning

# S1479: Major :: "switch" statements should not have too many "case" clauses
dotnet_diagnostic.S1479.severity = warning

# S1607: Major :: Tests should not be ignored
dotnet_diagnostic.S1607.severity = warning

# S1696: Major :: NullReferenceException should not be caught
dotnet_diagnostic.S1696.severity = warning

# S1854: Major :: Unused assignments should be removed
dotnet_diagnostic.S1854.severity = warning

# S1871: Major :: Two branches in a conditional structure should not have exactly the same implementation
dotnet_diagnostic.S1871.severity = warning

# S2234: Major :: Parameters should be passed in the correct order
dotnet_diagnostic.S2234.severity = warning

# S2326: Major :: Unused type parameters should be removed
dotnet_diagnostic.S2326.severity = warning

# S2327: Major :: "try" statements with identical "catch" and/or "finally" blocks should be merged
dotnet_diagnostic.S2327.severity = warning

# S2357: Major :: Fields should be private
dotnet_diagnostic.S2357.severity = warning

# S2372: Major :: Exceptions should not be thrown from property getters
dotnet_diagnostic.S2372.severity = warning

# S2376: Major :: Write-only properties should not be used
dotnet_diagnostic.S2376.severity = warning

# S2436: Major :: Types and methods should not have too many generic parameters
dotnet_diagnostic.S2436.severity = warning

# S2589: Major :: Boolean expressions should not be gratuitous
dotnet_diagnostic.S2589.severity = warning

# S2681: Major :: Multiline blocks should be enclosed in curly braces
dotnet_diagnostic.S2681.severity = warning

# S2743: Major :: Static fields should not be used in generic types
dotnet_diagnostic.S2743.severity = warning

# S2933: Major :: Fields that are only assigned in the constructor should be "readonly"
dotnet_diagnostic.S2933.severity = warning

# S2971: Major :: "IEnumerable" LINQs should be simplified
dotnet_diagnostic.S2971.severity = warning

# S3010: Major :: Static fields should not be updated in constructors
dotnet_diagnostic.S3010.severity = warning

# S3011: Major :: Reflection should not be used to increase accessibility of classes, methods, or fields
dotnet_diagnostic.S3011.severity = warning

# S3169: Major :: Multiple "OrderBy" calls should not be used
dotnet_diagnostic.S3169.severity = warning

# S3246: Major :: Generic type parameters should be co/contravariant when possible
dotnet_diagnostic.S3246.severity = warning

# S3262: Major :: "params" should be used on overrides
dotnet_diagnostic.S3262.severity = warning

# S3264: Major :: Events should be invoked
dotnet_diagnostic.S3264.severity = warning

# S3358: Major :: Ternary operators should not be nested
dotnet_diagnostic.S3358.severity = warning

# S3366: Major :: "this" should not be exposed from constructors
dotnet_diagnostic.S3366.severity = warning

# S3415: Major :: Assertion arguments should be passed in the correct order
dotnet_diagnostic.S3415.severity = warning

# S3431: Major :: "[ExpectedException]" should not be used
dotnet_diagnostic.S3431.severity = warning

# S3442: Major :: "abstract" classes should not have "public" constructors
dotnet_diagnostic.S3442.severity = warning

# S3445: Major :: Exceptions should not be explicitly rethrown
dotnet_diagnostic.S3445.severity = warning

# S3457: Major :: Composite format strings should be used correctly
dotnet_diagnostic.S3457.severity = warning

# S3597: Major :: "ServiceContract" and "OperationContract" attributes should be used together
dotnet_diagnostic.S3597.severity = warning

# S3880: Major :: Finalizers should not be empty
dotnet_diagnostic.S3880.severity = warning

# S3881: Major :: "IDisposable" should be implemented correctly
dotnet_diagnostic.S3881.severity = warning

# S3885: Major :: "Assembly.Load" should be used
dotnet_diagnostic.S3885.severity = warning

# S3898: Major :: Value types should implement "IEquatable<T>"
dotnet_diagnostic.S3898.severity = warning

# S3900: Major :: Arguments of public methods should be validated against null
dotnet_diagnostic.S3900.severity = warning

# S3902: Major :: "Assembly.GetExecutingAssembly" should not be called
dotnet_diagnostic.S3902.severity = warning

# S3906: Major :: Event Handlers should have the correct signature
dotnet_diagnostic.S3906.severity = warning

# S3908: Major :: Generic event handlers should be used
dotnet_diagnostic.S3908.severity = warning

# S3909: Major :: Collections should implement the generic interface
dotnet_diagnostic.S3909.severity = warning

# S3925: Major :: "ISerializable" should be implemented correctly
dotnet_diagnostic.S3925.severity = warning

# S3928: Major :: Parameter names used into ArgumentException constructors should match an existing one 
dotnet_diagnostic.S3928.severity = warning

# S3956: Major :: "Generic.List" instances should not be part of public APIs
dotnet_diagnostic.S3956.severity = warning

# S3966: Major :: Objects should not be disposed more than once
dotnet_diagnostic.S3966.severity = warning

# S3971: Major :: "GC.SuppressFinalize" should not be called
dotnet_diagnostic.S3971.severity = warning

# S3990: Major :: Assemblies should be marked as CLS compliant
dotnet_diagnostic.S3990.severity = warning

# S3992: Major :: Assemblies should explicitly specify COM visibility
dotnet_diagnostic.S3992.severity = warning

# S3993: Major :: Custom attributes should be marked with "System.AttributeUsageAttribute"
dotnet_diagnostic.S3993.severity = warning

# S3994: Major :: URI Parameters should not be strings
dotnet_diagnostic.S3994.severity = warning

# S3995: Major :: URI return values should not be strings
dotnet_diagnostic.S3995.severity = warning

# S3996: Major :: URI properties should not be strings
dotnet_diagnostic.S3996.severity = warning

# S3997: Major :: String URI overloads should call "System.Uri" overloads
dotnet_diagnostic.S3997.severity = warning

# S4002: Major :: Disposable types should declare finalizers
dotnet_diagnostic.S4002.severity = warning

# S4004: Major :: Collection properties should be readonly
dotnet_diagnostic.S4004.severity = warning

# S4005: Major :: "System.Uri" arguments should be used instead of strings
dotnet_diagnostic.S4005.severity = warning

# S4016: Major :: Enumeration members should not be named "Reserved"
dotnet_diagnostic.S4016.severity = warning

# S4017: Major :: Method signatures should not contain nested generic types
dotnet_diagnostic.S4017.severity = warning

# S4035: Major :: Classes implementing "IEquatable<T>" should be sealed
dotnet_diagnostic.S4035.severity = warning

# S4050: Major :: Operators should be overloaded consistently
dotnet_diagnostic.S4050.severity = warning

# S4055: Major :: Literals should not be passed as localized parameters
dotnet_diagnostic.S4055.severity = warning

# S4057: Major :: Locales should be set for data types
dotnet_diagnostic.S4057.severity = warning

# S4059: Major :: Property names should not match get methods
dotnet_diagnostic.S4059.severity = warning

# S4070: Major :: Non-flags enums should not be marked with "FlagsAttribute"
dotnet_diagnostic.S4070.severity = warning

# S4142: Major :: Duplicate values should not be passed as arguments
dotnet_diagnostic.S4142.severity = warning

# S4144: Major :: Methods should not have identical implementations
dotnet_diagnostic.S4144.severity = warning

# S4200: Major :: Native methods should be wrapped
dotnet_diagnostic.S4200.severity = warning

# S4214: Major :: "P/Invoke" methods should not be visible
dotnet_diagnostic.S4214.severity = warning

# S4220: Major :: Events should have proper arguments
dotnet_diagnostic.S4220.severity = warning

# S4456: Major :: Parameter validation in yielding methods should be wrapped
dotnet_diagnostic.S4456.severity = warning

# S4457: Major :: Parameter validation in "async"/"await" methods should be wrapped
dotnet_diagnostic.S4457.severity = warning

# S4581: Major :: "new Guid()" should not be used
dotnet_diagnostic.S4581.severity = warning

# S881: Major :: Increment (++) and decrement (--) operators should not be used in a method call or mixed with other operators in an expression
dotnet_diagnostic.S881.severity = warning

# S907: Major :: "goto" statement should not be used
dotnet_diagnostic.S907.severity = warning

# S100: Minor :: Methods and properties should be named in PascalCase
dotnet_diagnostic.S100.severity = warning

# S101: Minor :: Types should be named in PascalCase
dotnet_diagnostic.S101.severity = warning

# S105: Minor :: Tabulation characters should not be used
dotnet_diagnostic.S105.severity = warning

# S1075: Minor :: URIs should not be hardcoded
dotnet_diagnostic.S1075.severity = warning

# S1104: Minor :: Fields should not have public accessibility
dotnet_diagnostic.S1104.severity = warning

# S1109: Minor :: A close curly brace should be located at the beginning of a line
dotnet_diagnostic.S1109.severity = warning

# S1116: Minor :: Empty statements should be removed
dotnet_diagnostic.S1116.severity = warning

# S1125: Minor :: Boolean literals should not be redundant
dotnet_diagnostic.S1125.severity = warning

# S1128: Minor :: Unused "using" should be removed
dotnet_diagnostic.S1128.severity = warning

# S113: Minor :: Files should contain an empty newline at the end
dotnet_diagnostic.S113.severity = warning

# S1155: Minor :: "Any()" should be used to test for emptiness
dotnet_diagnostic.S1155.severity = warning

# S1185: Minor :: Overriding members should do more than simply call the same member in the base class
dotnet_diagnostic.S1185.severity = warning

# S1192: Minor :: String literals should not be duplicated
dotnet_diagnostic.S1192.severity = warning

# S1199: Minor :: Nested code blocks should not be used
dotnet_diagnostic.S1199.severity = warning

# S1210: Minor :: "Equals" and the comparison operators should be overridden when implementing "IComparable"
dotnet_diagnostic.S1210.severity = warning

# S1227: Minor :: break statements should not be used except for switch cases
dotnet_diagnostic.S1227.severity = warning

# S1264: Minor :: A "while" loop should be used instead of a "for" loop
dotnet_diagnostic.S1264.severity = warning

# S1301: Minor :: "switch" statements should have at least 3 "case" clauses
dotnet_diagnostic.S1301.severity = warning

# S1449: Minor :: Culture should be specified for "string" operations
dotnet_diagnostic.S1449.severity = warning

# S1450: Minor :: Private fields only used as local variables in methods should become local variables
dotnet_diagnostic.S1450.severity = warning

# S1481: Minor :: Unused local variables should be removed
dotnet_diagnostic.S1481.severity = warning

# S1643: Minor :: Strings should not be concatenated using '+' in a loop
dotnet_diagnostic.S1643.severity = warning

# S1659: Minor :: Multiple variables should not be declared on the same line
dotnet_diagnostic.S1659.severity = warning

# S1694: Minor :: An abstract class should have both abstract and concrete methods
dotnet_diagnostic.S1694.severity = warning

# S1698: Minor :: "==" should not be used when "Equals" is overridden
dotnet_diagnostic.S1698.severity = warning

# S1858: Minor :: "ToString()" calls should not be redundant
dotnet_diagnostic.S1858.severity = warning

# S1905: Minor :: Redundant casts should not be used
dotnet_diagnostic.S1905.severity = warning

# S1939: Minor :: Inheritance list should not be redundant
dotnet_diagnostic.S1939.severity = warning

# S1940: Minor :: Boolean checks should not be inverted
dotnet_diagnostic.S1940.severity = warning

# S2148: Minor :: Underscores should be used to make large numbers readable
dotnet_diagnostic.S2148.severity = warning

# S2156: Minor :: "sealed" classes should not have "protected" members
dotnet_diagnostic.S2156.severity = warning

# S2219: Minor :: Runtime type checking should be simplified
dotnet_diagnostic.S2219.severity = warning

# S2221: Minor :: "Exception" should not be caught when not required by called methods
dotnet_diagnostic.S2221.severity = warning

# S2292: Minor :: Trivial properties should be auto-implemented
dotnet_diagnostic.S2292.severity = warning

# S2325: Minor :: Methods and properties that don't access instance data should be static
dotnet_diagnostic.S2325.severity = warning

# S2333: Minor :: Redundant modifiers should not be used
dotnet_diagnostic.S2333.severity = warning

# S2342: Minor :: Enumeration types should comply with a naming convention
dotnet_diagnostic.S2342.severity = warning

# S2344: Minor :: Enumeration type names should not have "Flags" or "Enum" suffixes
dotnet_diagnostic.S2344.severity = warning

# S2386: Minor :: Mutable fields should not be "public static"
dotnet_diagnostic.S2386.severity = warning

# S2486: Minor :: Generic exceptions should not be ignored
dotnet_diagnostic.S2486.severity = warning

# S2737: Minor :: "catch" clauses should do more than rethrow
dotnet_diagnostic.S2737.severity = warning

# S2760: Minor :: Sequential tests should not check the same condition
dotnet_diagnostic.S2760.severity = warning

# S3052: Minor :: Members should not be initialized to default values
dotnet_diagnostic.S3052.severity = warning

# S3220: Minor :: Method calls should not resolve ambiguously to overloads with "params"
dotnet_diagnostic.S3220.severity = warning

# S3234: Minor :: "GC.SuppressFinalize" should not be invoked for types without destructors
dotnet_diagnostic.S3234.severity = warning

# S3235: Minor :: Redundant parentheses should not be used
dotnet_diagnostic.S3235.severity = warning

# S3236: Minor :: Caller information arguments should not be provided explicitly
dotnet_diagnostic.S3236.severity = warning

# S3240: Minor :: The simplest possible condition syntax should be used
dotnet_diagnostic.S3240.severity = warning

# S3241: Minor :: Methods should not return values that are never used
dotnet_diagnostic.S3241.severity = warning

# S3242: Minor :: Method parameters should be declared with base types
dotnet_diagnostic.S3242.severity = warning

# S3247: Minor :: Duplicate casts should not be made
dotnet_diagnostic.S3247.severity = warning

# S3251: Minor :: Implementations should be provided for "partial" methods
dotnet_diagnostic.S3251.severity = warning

# S3253: Minor :: Constructor and destructor declarations should not be redundant
dotnet_diagnostic.S3253.severity = warning

# S3254: Minor :: Default parameter values should not be passed as arguments
dotnet_diagnostic.S3254.severity = warning

# S3256: Minor :: "string.IsNullOrEmpty" should be used
dotnet_diagnostic.S3256.severity = warning

# S3257: Minor :: Declarations and initializations should be as concise as possible
dotnet_diagnostic.S3257.severity = warning

# S3261: Minor :: Namespaces should not be empty
dotnet_diagnostic.S3261.severity = warning

# S3376: Minor :: Attribute, EventArgs, and Exception type names should end with the type being extended
dotnet_diagnostic.S3376.severity = warning

# S3400: Minor :: Methods should not return constants
dotnet_diagnostic.S3400.severity = warning

# S3440: Minor :: Variables should not be checked against the values they're about to be assigned
dotnet_diagnostic.S3440.severity = warning

# S3441: Minor :: Redundant property names should be omitted in anonymous classes
dotnet_diagnostic.S3441.severity = warning

# S3444: Minor :: Interfaces should not simply inherit from base interfaces with colliding members
dotnet_diagnostic.S3444.severity = warning

# S3450: Minor :: Parameters with "[DefaultParameterValue]" attributes should also be marked "[Optional]"
dotnet_diagnostic.S3450.severity = warning

# S3458: Minor :: Empty "case" clauses that fall through to the "default" should be omitted
dotnet_diagnostic.S3458.severity = warning

# S3459: Minor :: Unassigned members should be removed
dotnet_diagnostic.S3459.severity = warning

# S3532: Minor :: Empty "default" clauses should be removed
dotnet_diagnostic.S3532.severity = warning

# S3604: Minor :: Member initializer values should not be redundant
dotnet_diagnostic.S3604.severity = warning

# S3626: Minor :: Jump statements should not be redundant
dotnet_diagnostic.S3626.severity = warning

# S3717: Minor :: Track use of "NotImplementedException"
dotnet_diagnostic.S3717.severity = warning

# S3872: Minor :: Parameter names should not duplicate the names of their methods
dotnet_diagnostic.S3872.severity = warning

# S3876: Minor :: Strings or integral types should be used for indexers
dotnet_diagnostic.S3876.severity = warning

# S3897: Minor :: Classes that provide "Equals(<T>)" should implement "IEquatable<T>"
dotnet_diagnostic.S3897.severity = warning

# S3962: Minor :: "static readonly" constants should be "const" instead
dotnet_diagnostic.S3962.severity = warning

# S3963: Minor :: "static" fields should be initialized inline
dotnet_diagnostic.S3963.severity = warning

# S3967: Minor :: Multidimensional arrays should not be used
dotnet_diagnostic.S3967.severity = warning

# S4018: Minor :: Generic methods should provide type parameters
dotnet_diagnostic.S4018.severity = warning

# S4022: Minor :: Enumerations should have "Int32" storage
dotnet_diagnostic.S4022.severity = warning

# S4023: Minor :: Interfaces should not be empty
dotnet_diagnostic.S4023.severity = warning

# S4026: Minor :: Assemblies should be marked with "NeutralResourcesLanguageAttribute"
dotnet_diagnostic.S4026.severity = warning

# S4027: Minor :: Exceptions should provide standard constructors
dotnet_diagnostic.S4027.severity = warning

# S4040: Minor :: Strings should be normalized to uppercase
dotnet_diagnostic.S4040.severity = warning

# S4041: Minor :: Type names should not match namespaces
dotnet_diagnostic.S4041.severity = warning

# S4047: Minor :: Generics should be used when appropriate
dotnet_diagnostic.S4047.severity = warning

# S4049: Minor :: Properties should be preferred
dotnet_diagnostic.S4049.severity = warning

# S4052: Minor :: Types should not extend outdated base types
dotnet_diagnostic.S4052.severity = warning

# S4056: Minor :: Overloads with a "CultureInfo" or an "IFormatProvider" parameter should be used
dotnet_diagnostic.S4056.severity = warning

# S4058: Minor :: Overloads with a "StringComparison" parameter should be used
dotnet_diagnostic.S4058.severity = warning

# S4060: Minor :: Non-abstract attributes should be sealed
dotnet_diagnostic.S4060.severity = warning

# S4069: Minor :: Operator overloads should have named alternatives
dotnet_diagnostic.S4069.severity = warning

# S4136: Minor :: Method overloads should be grouped together
dotnet_diagnostic.S4136.severity = warning

# S4201: Minor :: Null checks should not be used with "is"
dotnet_diagnostic.S4201.severity = warning

# S4225: Minor :: Extension methods should not extend "object"
dotnet_diagnostic.S4225.severity = warning

# S4226: Minor :: Extensions should be in separate namespaces
dotnet_diagnostic.S4226.severity = warning

# S4261: Minor :: Methods should be named according to their synchronicities
dotnet_diagnostic.S4261.severity = warning

# S818: Minor :: Literal suffixes should be upper case
dotnet_diagnostic.S818.severity = warning


# BUG


# S1048: Blocker :: Destructors should not throw exceptions
dotnet_diagnostic.S1048.severity = error

# S2190: Blocker :: Recursion should not be infinite
dotnet_diagnostic.S2190.severity = error

# S2275: Blocker :: Composite format strings should not lead to unexpected behavior at runtime
dotnet_diagnostic.S2275.severity = error

# S2857: Blocker :: SQL keywords should be delimited by whitespace
dotnet_diagnostic.S2857.severity = error

# S2930: Blocker :: "IDisposables" should be disposed
dotnet_diagnostic.S2930.severity = error

# S2931: Blocker :: Classes with "IDisposable" members should implement "IDisposable"
dotnet_diagnostic.S2931.severity = error

# S3464: Blocker :: Type inheritance should not be recursive
dotnet_diagnostic.S3464.severity = error

# S3693: Blocker :: Exception constructors should not throw exceptions
dotnet_diagnostic.S3693.severity = error

# S3869: Blocker :: "SafeHandle.DangerousGetHandle" should not be called
dotnet_diagnostic.S3869.severity = error

# S3889: Blocker :: Neither "Thread.Resume" nor "Thread.Suspend" should be used
dotnet_diagnostic.S3889.severity = error

# S4159: Blocker :: Classes should implement their "ExportAttribute" interfaces
dotnet_diagnostic.S4159.severity = error

# S2551: Critical :: Shared resources should not be used for locking
dotnet_diagnostic.S2551.severity = error

# S2952: Critical :: Classes should "Dispose" of members from the classes' own "Dispose" methods
dotnet_diagnostic.S2952.severity = error

# S3449: Critical :: Right operands of shift operators should be integers
dotnet_diagnostic.S3449.severity = error

# S4275: Critical :: Getters and setters should access the expected fields
dotnet_diagnostic.S4275.severity = error

# S4277: Critical :: "Shared" parts should not be created with "new"
dotnet_diagnostic.S4277.severity = error

# S4583: Critical :: Calls to delegate's method "BeginInvoke" should be paired with calls to "EndInvoke"
dotnet_diagnostic.S4583.severity = error

# S4586: Critical :: Non-async "Task/Task<T>" methods should not return null
dotnet_diagnostic.S4586.severity = error

# S1145: Major :: Useless "if(true) {...}" and "if(false){...}" blocks should be removed
dotnet_diagnostic.S1145.severity = error

# S1244: Major :: Floating point numbers should not be tested for equality
dotnet_diagnostic.S1244.severity = error

# S1656: Major :: Variables should not be self-assigned
dotnet_diagnostic.S1656.severity = error

# S1697: Major :: Short-circuit logic should be used to prevent null pointer dereferences in conditionals
dotnet_diagnostic.S1697.severity = error

# S1751: Major :: Loops with at most one iteration should be refactored
dotnet_diagnostic.S1751.severity = error

# S1764: Major :: Identical expressions should not be used on both sides of a binary operator
dotnet_diagnostic.S1764.severity = error

# S1848: Major :: Objects should not be created to be dropped immediately without being used
dotnet_diagnostic.S1848.severity = error

# S1862: Major :: Related "if/else if" statements should not have the same condition
dotnet_diagnostic.S1862.severity = error

# S2114: Major :: Collections should not be passed as arguments to their own methods
dotnet_diagnostic.S2114.severity = error

# S2123: Major :: Values should not be uselessly incremented
dotnet_diagnostic.S2123.severity = error

# S2201: Major :: Return values from functions without side effects should not be ignored
dotnet_diagnostic.S2201.severity = error

# S2225: Major :: "ToString()" method should not return null
dotnet_diagnostic.S2225.severity = error

# S2251: Major :: A "for" loop update clause should move the counter in the right direction
dotnet_diagnostic.S2251.severity = error

# S2252: Major :: For-loop conditions should be true at least once
dotnet_diagnostic.S2252.severity = error

# S2259: Major :: Null pointers should not be dereferenced
dotnet_diagnostic.S2259.severity = error

# S2583: Major :: Conditionally executed code should be reachable
dotnet_diagnostic.S2583.severity = error

# S2688: Major :: "NaN" should not be used in comparisons
dotnet_diagnostic.S2688.severity = error

# S2757: Major :: "=+" should not be used instead of "+="
dotnet_diagnostic.S2757.severity = error

# S2758: Major :: The ternary operator should not return the same value regardless of the condition
dotnet_diagnostic.S2758.severity = error

# S2761: Major :: Doubled prefix operators "!!" and "~~" should not be used
dotnet_diagnostic.S2761.severity = error

# S2995: Major :: "Object.ReferenceEquals" should not be used for value types
dotnet_diagnostic.S2995.severity = error

# S2996: Major :: "ThreadStatic" fields should not be initialized
dotnet_diagnostic.S2996.severity = error

# S2997: Major :: "IDisposables" created in a "using" statement should not be returned
dotnet_diagnostic.S2997.severity = error

# S3005: Major :: "ThreadStatic" should not be used on non-static fields
dotnet_diagnostic.S3005.severity = error

# S3168: Major :: "async" methods should not return "void"
dotnet_diagnostic.S3168.severity = error

# S3172: Major :: Delegates should not be subtracted
dotnet_diagnostic.S3172.severity = error

# S3244: Major :: Anonymous delegates should not be used to unsubscribe from Events
dotnet_diagnostic.S3244.severity = error

# S3249: Major :: Classes directly extending "object" should not call "base" in "GetHashCode" or "Equals"
dotnet_diagnostic.S3249.severity = error

# S3263: Major :: Static fields should appear in the order they must be initialized 
dotnet_diagnostic.S3263.severity = error

# S3343: Major :: Caller information parameters should come at the end of the parameter list
dotnet_diagnostic.S3343.severity = error

# S3346: Major :: Expressions used in "Debug.Assert" should not produce side effects
dotnet_diagnostic.S3346.severity = error

# S3453: Major :: Classes should not have only "private" constructors
dotnet_diagnostic.S3453.severity = error

# S3466: Major :: Optional parameters should be passed to "base" calls
dotnet_diagnostic.S3466.severity = error

# S3598: Major :: One-way "OperationContract" methods should have "void" return type
dotnet_diagnostic.S3598.severity = error

# S3603: Major :: Methods with "Pure" attribute should return a value 
dotnet_diagnostic.S3603.severity = error

# S3610: Major :: Nullable type comparison should not be redundant
dotnet_diagnostic.S3610.severity = error

# S3655: Major :: Empty nullable value should not be accessed
dotnet_diagnostic.S3655.severity = error

# S3903: Major :: Types should be defined in named namespaces
dotnet_diagnostic.S3903.severity = error

# S3923: Major :: All branches in a conditional structure should not have exactly the same implementation
dotnet_diagnostic.S3923.severity = error

# S3926: Major :: Deserialization methods should be provided for "OptionalField" members
dotnet_diagnostic.S3926.severity = error

# S3927: Major :: Serialization event handlers should be implemented correctly
dotnet_diagnostic.S3927.severity = error

# S3949: Major :: Calculations should not overflow
dotnet_diagnostic.S3949.severity = error

# S3981: Major :: Collection sizes and array length comparisons should make sense
dotnet_diagnostic.S3981.severity = error

# S3984: Major :: Exceptions should not be created without being thrown
dotnet_diagnostic.S3984.severity = error

# S4143: Major :: Collection elements should not be replaced unconditionally
dotnet_diagnostic.S4143.severity = error

# S4210: Major :: Windows Forms entry points should be marked with STAThread
dotnet_diagnostic.S4210.severity = error

# S4260: Major :: "ConstructorArgument" parameters should exist in constructors
dotnet_diagnostic.S4260.severity = error

# S4428: Major :: "PartCreationPolicyAttribute" should be used with "ExportAttribute"
dotnet_diagnostic.S4428.severity = error

# S1206: Minor :: "Equals(Object)" and "GetHashCode()" should be overridden in pairs
dotnet_diagnostic.S1206.severity = error

# S1226: Minor :: Method parameters, caught exceptions and foreach variables' initial values should not be ignored
dotnet_diagnostic.S1226.severity = error

# S2183: Minor :: Integral numbers should not be shifted by zero or more than their number of bits-1
dotnet_diagnostic.S2183.severity = error

# S2184: Minor :: Results of integer division should not be assigned to floating point variables
dotnet_diagnostic.S2184.severity = error

# S2328: Minor :: "GetHashCode" should not reference mutable fields
dotnet_diagnostic.S2328.severity = error

# S2345: Minor :: Flags enumerations should explicitly initialize all their members
dotnet_diagnostic.S2345.severity = error

# S2674: Minor :: The length returned from a stream read should be checked
dotnet_diagnostic.S2674.severity = error

# S2934: Minor :: Property assignments should not be made for "readonly" fields not constrained to reference types
dotnet_diagnostic.S2934.severity = error

# S2955: Minor :: Generic parameters not constrained to reference types should not be compared to "null"
dotnet_diagnostic.S2955.severity = error

# S3397: Minor :: "base.Equals" should not be used to check for reference equality in "Equals" if "base" is not "object"
dotnet_diagnostic.S3397.severity = error

# S3456: Minor :: "string.ToCharArray()" should not be called redundantly
dotnet_diagnostic.S3456.severity = error

# S3887: Minor :: Mutable, non-private fields should not be "readonly"
dotnet_diagnostic.S3887.severity = error

# S4158: Minor :: Empty collections should not be accessed or iterated
dotnet_diagnostic.S4158.severity = error


# SECURITY_HOTSPOT


# S2068: Blocker :: Hard-coded credentials are security-sensitive
dotnet_diagnostic.S2068.severity = error

# S2245: Critical :: Using pseudorandom number generators (PRNGs) is security-sensitive
dotnet_diagnostic.S2245.severity = error

# S2257: Critical :: Using non-standard cryptographic algorithms is security-sensitive
dotnet_diagnostic.S2257.severity = error

# S4784: Critical :: Using regular expressions is security-sensitive
dotnet_diagnostic.S4784.severity = error

# S4787: Critical :: Encrypting data is security-sensitive
dotnet_diagnostic.S4787.severity = error

# S4790: Critical :: Using weak hashing algorithms is security-sensitive
dotnet_diagnostic.S4790.severity = error

# S4792: Critical :: Configuring loggers is security-sensitive
dotnet_diagnostic.S4792.severity = error

# S4818: Critical :: Using Sockets is security-sensitive
dotnet_diagnostic.S4818.severity = error

# S4823: Critical :: Using command line arguments is security-sensitive
dotnet_diagnostic.S4823.severity = error

# S4829: Critical :: Reading the Standard Input is security-sensitive
dotnet_diagnostic.S4829.severity = error

# S5042: Critical :: Expanding archive files without controlling resource consumption is security-sensitive
dotnet_diagnostic.S5042.severity = error

# S5332: Critical :: Using clear-text protocols is security-sensitive
dotnet_diagnostic.S5332.severity = error

# S5443: Critical :: Using publicly writable directories is security-sensitive
dotnet_diagnostic.S5443.severity = error

# S1313: Major :: Using hardcoded IP addresses is security-sensitive
dotnet_diagnostic.S1313.severity = error

# S2077: Major :: Formatting SQL queries is security-sensitive
dotnet_diagnostic.S2077.severity = error

# S2612: Major :: Setting loose file permissions is security-sensitive
dotnet_diagnostic.S2612.severity = error

# S5693: Major :: Allowing requests with excessive content length is security-sensitive
dotnet_diagnostic.S5693.severity = error

# S5753: Major :: Disabling ASP.NET "Request Validation" feature is security-sensitive
dotnet_diagnostic.S5753.severity = error

# S5766: Major :: Deserializing objects without performing data validation is security-sensitive
dotnet_diagnostic.S5766.severity = error

# S2092: Minor :: Creating cookies without the "secure" flag is security-sensitive
dotnet_diagnostic.S2092.severity = error

# S2255: Minor :: Writing cookies is security-sensitive
dotnet_diagnostic.S2255.severity = error

# S3330: Minor :: Creating cookies without the "HttpOnly" flag is security-sensitive
dotnet_diagnostic.S3330.severity = error

# S4036: Minor :: Searching OS commands in PATH is security-sensitive
dotnet_diagnostic.S4036.severity = error

# S4507: Minor :: Delivering code in production with debug features activated is security-sensitive
dotnet_diagnostic.S4507.severity = error

# S4834: Minor :: Controlling permissions is security-sensitive
dotnet_diagnostic.S4834.severity = error


# VULNERABILITY


# S2278: Blocker :: Neither DES (Data Encryption Standard) nor DESede (3DES) should be used
dotnet_diagnostic.S2278.severity = error

# S2755: Blocker :: XML parsers should not be vulnerable to XXE attacks
dotnet_diagnostic.S2755.severity = error

# S3884: Blocker :: "CoSetProxyBlanket" and "CoInitializeSecurity" should not be used
dotnet_diagnostic.S3884.severity = error

# S4426: Blocker :: Cryptographic keys should be robust
dotnet_diagnostic.S4426.severity = error

# S5542: Blocker :: Encryption algorithms should be used with secure mode and padding scheme
dotnet_diagnostic.S5542.severity = error

# S2053: Critical :: Hashes should include an unpredictable salt
dotnet_diagnostic.S2053.severity = error

# S2070: Critical :: SHA-1 and Message-Digest hash algorithms should not be used in secure contexts
dotnet_diagnostic.S2070.severity = error

# S3329: Critical :: Cipher Block Chaining IV's should be random and unique
dotnet_diagnostic.S3329.severity = error

# S4432: Critical :: AES encryption algorithm should be used with secured mode
dotnet_diagnostic.S4432.severity = error

# S4433: Critical :: LDAP connections should be authenticated
dotnet_diagnostic.S4433.severity = error

# S4830: Critical :: Server certificates should be verified during SSL/TLS connections
dotnet_diagnostic.S4830.severity = error

# S5445: Critical :: Insecure temporary file creation methods should not be used
dotnet_diagnostic.S5445.severity = error

# S5547: Critical :: Cipher algorithms should be robust
dotnet_diagnostic.S5547.severity = error

# S5659: Critical :: JWT should be signed and verified with strong cipher algorithms
dotnet_diagnostic.S5659.severity = error

# S4211: Major :: Members should not have conflicting transparency annotations
dotnet_diagnostic.S4211.severity = error

# S4212: Major :: Serialization constructors should be secured
dotnet_diagnostic.S4212.severity = error

# S4423: Major :: Weak SSL/TLS protocols should not be used
dotnet_diagnostic.S4423.severity = error

# S4564: Major :: ASP.NET HTTP request validation feature should not be disabled
dotnet_diagnostic.S4564.severity = error

# S5773: Major :: Types allowed to be deserialized should be restricted
dotnet_diagnostic.S5773.severity = error

# S2228: Minor :: Console logging should not be used
dotnet_diagnostic.S2228.severity = error